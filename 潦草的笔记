什么是SSH:
https://abcdabcd987.com/ssh/
SSH就是在键盘上输入几条命令，就可以让几台电脑之间建立联系的工具

SSH是一种在网络上进行数据传输的安全协议，
网络：互联网
数据：某些东西
传输：从这里转移到那里
协议：协议就是一种通用格式，约定。

在互联网上，用一种安全通用的格式、约定，将某些东西，从这里转移到那里。
--------------------------------------------------------------------------------------------------
SSH远程登陆：

口令登陆
ssh user@remote -p -port
user:远程机的用户名
remote:远程机地址
port:SSH Server监听的端口，默认22

免密密钥登陆
把本机的id_rsa.pub丢进远程机的~/.ssh/authorized_keys

如何退出
exit/logout
---------------------------------------------------------------------------------------------------
配置别名
在本机.ssh写个文本config，内容如下
Host <别名>
    HostName <远程机地址>
    User <远程机用户名>
    Port <端口号>

保存之后，即可用 ssh <远程机别名> 登入，如果还配置了公钥登入，那就连密码都不用输入了。

传输文件
scp <本机文件路径> <用户名>@<地址>:<存放路径>

---------------------------------------------------------------------------------------------------
SSH进程退出，那么之前的动作全会关闭，tmux可以保持程序在后台运行
tmux保持程序在后台运行
mux是一个 terminal multiplexer(终端复用器)

创建名为train的会话
tmux new -s train
退出(detach)当前tmux
ctrl+b d
使用命令tmux ls来查询已启动的终端序列
tmux ls
重新进入tmux
tmux attach -t <序列号>
关闭所有sessions：
tmux kill-server
关闭指定session：
tmux kill-session -t <序号>

kill了tmux,tmux启动的服务也会关闭
---------------------------------------------------------------------------------------------------
反向端口转发的3个例子
1.
将内网机端口22绑到跳板机的10022端口，
<内网机>$ ssh -R 10022:localhost:22 <跳板机地址>
那么其他机子，
就可以先ssh连跳板机(因为有公网IP）
连上跳板机后，再连内网机
<跳板机>$ ssh user@localhost -p 10022

只要这个端口转发的ssh不断，就可以持续服务
但是网络波动可能导致这个连接断开，这个时候用autossh软件，它可以自动检测断线，断的时候重连
<内网机>$ autossh -NfR 10022:localhost:22 <跳板机地址>
甚至可以设置开机运行,前提是已配置公钥。
在 /etc/rc.local 里面 exit 0 这句话之前加上
su - <用户名> -c autossh -NfR 10022:localhost:22 <跳板机地址>
跳板机可供绑定的端口有1024-65535

2.
第一个例子是将内网机端口绑定跳板机，就像一个小县城修了一条路到大城市，
那么和小县城不通路的地方就可以先到大城市，再找到这条路去到小县城。

这次的例子则是转发内网机网站
<内网机>$ ssh -NR 0.0.0.0:18000:localhost:8000 <跳板机>
这条命令的意思是将内网机的的8000端口绑在跳板机的18000端口上，
0.0.0.0的意思是，这条绑定任何人都可以在本地上通过跳板机+端口进行访问。不设置的情况下是只有跳板机能访问，相当于权限设置。
这时在浏览器上输入<跳板机地址:18000> 就可以看到内网机上的网站了

ssh转发就像接水管，接来接去，搭建一条指定目的地的线路

这条转发测试的时候没成功，不知道哪个环节有问题，暂时放着。
这里有个坑，sshd服务端/etc/ssh/sshd_config里有一条配置GatewayProrts no 要改成yes,不然连不上。。。。

3.
此处测试失败，原因不详
---------------------------------------------------------------------------------------------------
                                                                                             20230419 
正向端口转发
A=跳板机 B=本机 C和反向转发跳板机的内网机
C转发A 端口CA，然后B向A索取端口CA到本地端口 ，
B通过访问自身索取到的端口，就可以访问到C
local$ ssh -NL 20022:localhost:10022 jumpbox
local$ ssh localhost -p 20022
lab$


---------------------------------------------------------------------------------------------------
https://www.cnblogs.com/keerya/p/7612715.html

SSH是什么：
加密远程连接、端口转发的工具
远程连接：在网络访问不受限的情况下，ssh可以直接建立连接，进行远程控制
端口转发：无法直连的情况下，通过跳板机搭路线建立隧道，实现远程连接
---------------------------------------------------------------------------------------------------
远程连接:
发起连接、免密密钥登陆、别名配置等略过。
---------------------------------------------------------------------------------------------------
端口转发：
    本地转发 
        因为跳板机既能连本地机，也能连目标机，所以理论上三台机子都可以互通。
        但本地机想要连接上目标机，
        就要先连上跳板机，跳板机连上目标机，并在三台机子中搭建一条隧道
        隧道入口在本地机，进入入口就可连上目标机。

    远程转发
        远程转发和本地转发实际上没什么区别，都是为了通往目标机而搭建一条隧道
        区别在于由谁发起，当本地机无法连接远程机时，就要由远程机自身发起转发命令。

         所谓的本地转发远程转发，正向转发反向转发，其实名词搞太复杂了，
         本质就是谁发起转发指令，隧道入口在哪里的问题
     动态转发
         配置代理
         使用代理进行访问
       此处有坑 下条指令可行
ssh -D 8080 root@B机器的IP -p B机器的SSH端口

https://www.cnblogs.com/keerya/p/7612715.html
https://www.cnblogs.com/kramer/p/11335990.html

---------------------------------------------------------------------------------------------------
                                                                                          20230419 
